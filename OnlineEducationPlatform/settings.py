"""
Django settings for OnlineEducationPlatform project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 't6zmsgrza*$8t97^!dxvoyrn!96h_rlxlq=iyc#d69ewu$(!=_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# 允许访问的host，在DEBUG为False时必须配置，默认 ['localhost', '127.0.0.1', '[::1]'], * 表示允许所有
ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'api.apps.ApiConfig',
    'rest_framework',  # 不是必须配置的，用于可视化显示API
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "api.utils.middlewares.CorsMiddleWare",  # 自定义CORS跨域请求中间件

]

ROOT_URLCONF = 'OnlineEducationPlatform.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI应用服务器与code交互的地方，请求通过WSGI到Django时的入口
WSGI_APPLICATION = 'OnlineEducationPlatform.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

# Django的默认密码校验机制，会在表单,修改密码，createsuperuser，changepassword命令中应用，不会在model层使用
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization 国际化
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

# 设置时区
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static")
]

# 指定Django的User表
AUTH_USER_MODEL = "api.UserInfo"

# 配置Django缓存设置
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "CONNECTION_POOL_KWARGS": {"max_connections": 100},
            # "PASSWORD": "密码",
            "DECODE_RESPONSES": True
        }
    },
}
SHOPPING_CAR_KEY = "shopping_car_%s_%s"
ACCOUNT_KEY = "account_%s"

THIRD_PART_CONFIG = {
    # 阿里云服务配置
    "ALI_YUN": {

    },
    # 滑动验证码服务配置
    "GEE_TEST": {
        "gee_test_access_id": "37ca5631edd1e882721808d35163b3ad",  # 仅用于测试
        "gee_test_access_key": "7eb11ccf3e0953bdd060ed8b60b0c4f5",  # 仅用于测试
        "verify_status": True,  # 是否启用滑动验证码验证组件(True表示启用)
        "not_verify": [
            "",
        ],  # 不用验证的用户(存放着用户的uid)

    },
    # 支付宝支付相关配置
    "ALI_PAY": {
        # 默认使用配置
        "default": {
            "version": "1.0",  # 支付宝支付调用的接口版本(固定值1.0)
            "debug": True,  # 是否启用调试模式(False是正式环境)
            "app_id": "2016101000654875",  # 支付宝分配给开发者的应用ID
            "app_private_key_path": os.path.join(
                BASE_DIR, 'keys', 'app_private_2048.txt'
            ),  # APP应用的私钥
            "alipay_public_key_path": os.path.join(
                BASE_DIR, 'keys', 'alipay_public_2048.txt'
            ),  # 支付宝的公钥
            "return_url": 'http://127.0.0.1:8000/trade/alipay/',  # GET
            "notify_url": 'http://127.0.0.1:8000/trade/alipay/',  # POST,必填参数
        },
        # 目前针对支付业务进行切换
        "pay": {
        }
    }
}

# REST FRAMEWORK
REST_FRAMEWORK = {
    # 清空默认auth，Base，Session
    "DEFAULT_AUTHENTICATION_CLASSES": []

}

# JWT 配置
JWT_EXP = 60 * 60 * 24 * 7  # 1 week
JWT_ALGORITHM = "HS256"
JWT_KEY = SECRET_KEY
